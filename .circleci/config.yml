version: 2
jobs:
  checkout_code:
    docker:
      - image: circleci/node:latest
    working_directory: ~/christianrebelsky.com
    steps:
      - run: node -v
      - checkout
      - attach_workspace:
          at: ~/christianrebelsky.com
      - restore_cache:
          keys:
            - yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-{{ .Branch }}
            - yarn-cache-
      - run: yarn install
      - save_cache:
          key: yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths: node_modules
      - persist_to_workspace:
          root: .
          paths: .
  check_vulnerabilities:
    docker:
      - image: circleci/node:latest
    working_directory: ~/christianrebelsky.com
    steps:
      - attach_workspace:
          at: ~/christianrebelsky.com
      - run: yarn install
      - run: |
          if [ "${CIRCLE_BRANCH}" == "production" ]; then
            yarn validate:dependencies
          else
            yarn validate:dependencies || true
          fi
  build:
    docker:
      - image: circleci/node:latest
    working_directory: ~/christianrebelsky.com
    steps:
      - attach_workspace:
          at: ~/christianrebelsky.com
      - run: yarn install
      - run: yarn build
      - persist_to_workspace:
          root: .
          paths: .
  deployment:
    docker:
      - image: circleci/node:latest
    working_directory: ~/christianrebelsky.com
    steps:
      - attach_workspace:
          at: ~/christianrebelsky.com
      - run:
          name: Install aws cli
          command:
            sudo apt-get -y -qq install awscli
      - run:  echo 'deploying branch'
      - add_ssh_keys
      - run:
          name: add key to known hosts
          command: |
            ssh-keyscan $DROPLET_IP >> ~/.ssh/known_hosts
      - run:
          name: check buckets
          command: |
            aws s3 --endpoint=https://ams3.digitaloceanspaces.com
      - deploy:
          name: deploy to DO server
          command: |
            scp -o StrictHostKeyChecking=no -r ~/christianrebelsky.com/public $DROPLET_USER@$DROPLET_IP:/var/www/christianrebelsky-stage/
      - deploy:
          name: deploy to DO space
          command: |
            echo "Deploy to space" |
            aws s3 sync ~/christianrebelsky.com/public/icon s3://cr-asset-space/test --acl-public --skip-existing
            --verbose --delete
workflows:
  version: 2
  test_build:
    jobs:
      - checkout_code
      - check_vulnerabilities:
          requires:
            - checkout_code
      - build:
          requires:
            - checkout_code
      - deployment:
          requires:
           - check_vulnerabilities
           - build
